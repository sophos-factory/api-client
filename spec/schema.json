{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.0",
    "title": "Sophos Factory API v1",
    "description": "",
    "contact": {
      "email": "support@refactr.it"
    }
  },
  "servers": [
    {
      "url": "https://api.refactr.it/v1",
      "description": "Sophos Factory API v1"
    }
  ],
  "tags": [
    {
      "name": "agents",
      "description": "Manage runner agents"
    },
    {
      "name": "catalogs",
      "description": "Manage catalogs"
    },
    {
      "name": "credentials",
      "description": "Manage credentials"
    },
    {
      "name": "jobs",
      "description": "Manage jobs"
    },
    {
      "name": "organizations",
      "description": "Manage organizations"
    },
    {
      "name": "pipelines",
      "description": "Manage pipelines"
    },
    {
      "name": "projects",
      "description": "Manage projects"
    },
    {
      "name": "runs",
      "description": "Manage runs"
    },
    {
      "name": "tokens",
      "description": "Manage API authentication tokens"
    },
    {
      "name": "users",
      "description": "Manage organization users and groups"
    }
  ],
  "paths": {
    "/tokens": {
      "get": {
        "tags": [
          "tokens"
        ],
        "summary": "List authorization tokens",
        "operationId": "listTokens",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Token"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "tokens"
        ],
        "summary": "Create authorization token",
        "operationId": "createToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "expire": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 999
                  },
                  "expire_unit": {
                    "type": "string",
                    "enum": [
                      "hours",
                      "days",
                      "years"
                    ]
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "security": [
          {
            "BasicAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "parameters": []
    },
    "/tokens/{_id}": {
      "delete": {
        "tags": [
          "tokens"
        ],
        "summary": "Delete token",
        "description": "",
        "operationId": "deleteToken",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "Token ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/user": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user",
        "description": "",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/user/profile": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Update user profile",
        "description": "",
        "operationId": "updateUserProfile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/user/password": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Update user password",
        "description": "",
        "operationId": "updateUserPassword",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "confirm_password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/user/activity": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List user activity",
        "description": "",
        "operationId": "listUserActivity",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_activity": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserActivity"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get project",
        "description": "",
        "operationId": "getProject",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variables",
                  "notification_channels",
                  "organization"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Update project",
        "description": "",
        "operationId": "updateProject",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "Delete project",
        "description": "",
        "operationId": "deleteProject",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List project users",
        "description": "",
        "operationId": "listProjectUsers",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add project user",
        "description": "",
        "operationId": "addProjectUser",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "role": {
                    "type": "string"
                  },
                  "run": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/users/{_id}": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Update project user",
        "description": "",
        "operationId": "updateProjectUser",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "read",
                      "write",
                      "admin"
                    ]
                  },
                  "run": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Remove project user",
        "description": "",
        "operationId": "removeProjectUser",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/groups": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List project groups",
        "description": "",
        "operationId": "listProjectGroups",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "group_id": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "read",
                              "write",
                              "admin"
                            ]
                          },
                          "run": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add project group",
        "description": "",
        "operationId": "addProjectGroup",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "group_id",
                  "role",
                  "run"
                ],
                "properties": {
                  "group_id": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "read",
                      "write",
                      "admin"
                    ]
                  },
                  "run": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/groups/{group_id}": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Update project group",
        "description": "",
        "operationId": "updateProjectGroup",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "read",
                      "write",
                      "admin"
                    ]
                  },
                  "run": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Remove project group",
        "description": "",
        "operationId": "removeProjectGroup",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/invites": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List project invites",
        "description": "",
        "operationId": "listProjectInvites",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectInvite"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/invites/{_id}": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Revoke project invite",
        "description": "",
        "operationId": "revokeProjectInvite",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Invite ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/invites/{_id}/resend": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Resend project invite",
        "description": "",
        "operationId": "resendProjectInvite",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Invite ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/notification_channels": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Add project notification channel",
        "description": "",
        "operationId": "addProjectNotificationChannel",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationChannel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/notification_channels/{notification_channel_id}": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Update project notification channel",
        "description": "",
        "operationId": "updateProjectNotificationChannel",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "notification_channel_id",
            "in": "path",
            "description": "Notification Channel ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "Remove project notification channel",
        "description": "",
        "operationId": "removeProjectNotificationChannel",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "notification_channel_id",
            "in": "path",
            "description": "Notification Channel ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/pipelines": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "summary": "List pipelines",
        "description": "",
        "operationId": "listPipelines",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "modified_asc",
                "modified_desc",
                "name_asc",
                "name_desc"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pinned",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pipelines": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pipeline"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "pipelines"
        ],
        "summary": "Create pipeline",
        "description": "",
        "operationId": "createPipeline",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pipeline"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/pipelines/{_id}": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "summary": "Get pipeline",
        "description": "",
        "operationId": "getPipeline",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pipeline"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "pipelines"
        ],
        "summary": "Update a pipeline",
        "description": "",
        "operationId": "updatePipeline",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pipeline"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "pipelines"
        ],
        "summary": "Delete pipeline",
        "description": "",
        "operationId": "deletePipeline",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/pipelines/{_id}/revisions": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "summary": "Get pipeline revisions",
        "description": "",
        "operationId": "getPipelineRevisions",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variables",
                  "user",
                  "outputs"
                ]
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "published",
            "in": "query",
            "description": "Filter pipelines by published status",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pipeline_revisions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PipelineRevision"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "pipelines"
        ],
        "summary": "Create a pipeline revision",
        "description": "",
        "operationId": "createPipelineRevision",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineRevision"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "revision": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/pipelines/{_id}/revisions/{revision_id}": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "summary": "Get pipeline revision",
        "description": "",
        "operationId": "getPipelineRevision",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Pipeline revision ID",
            "required": true,
            "schema": {
              "type": "string",
              "oneOf": [
                {
                  "format": "resource-id"
                },
                {
                  "enum": [
                    "latest",
                    "latest_published"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineRevision"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "pipelines"
        ],
        "summary": "Update a pipeline revision",
        "description": "",
        "operationId": "updatePipelineRevision",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Pipeline revision ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/pipelines/{_id}/revisions/{revision_id}/publish": {
      "post": {
        "tags": [
          "pipelines"
        ],
        "summary": "Publish a pipeline revision",
        "description": "",
        "operationId": "publishPipelineRevision",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Pipeline revision ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/pipelines/{_id}/revisions/{revision_id}/revisions": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "summary": "List pipeline revisions included in the steps of a given pipeline revision",
        "description": "",
        "operationId": "getPipelineRevisionPipelineRevisions",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Revision revision ID",
            "required": true,
            "schema": {
              "type": "string",
              "oneOf": [
                {
                  "format": "resource-id"
                },
                {
                  "enum": [
                    "latest",
                    "latest_published"
                  ]
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variables",
                  "outputs",
                  "steps",
                  "layout"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pipelines": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PipelineRevision"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/catalogs/{catalog_id}": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "Get catalog",
        "description": "",
        "operationId": "getCatalog",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "organization"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projects": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/catalogs/{catalog_id}/pipelines/{pipeline_id}/revisions/{revision_id}": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "Get catalog pipeline revision",
        "operationId": "getCatalogPipelineRevision",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "pipeline_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Pipeline revision ID",
            "required": true,
            "schema": {
              "type": "string",
              "oneOf": [
                {
                  "format": "resource-id"
                },
                {
                  "enum": [
                    "latest",
                    "latest_published"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineRevision"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/catalogs/{catalog_id}/pipelines/{pipeline_id}/revisions/{revision_id}/pipelines": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "List catalog pipelines included in the steps of a given catalog pipeline revision",
        "description": "",
        "operationId": "getCatalogPipelineRevisionPipelines",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "pipeline_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Pipeline revision ID",
            "required": true,
            "schema": {
              "type": "string",
              "oneOf": [
                {
                  "format": "resource-id"
                },
                {
                  "enum": [
                    "latest",
                    "latest_published"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pipelines": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pipeline"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/catalogs/{catalog_id}/pipelines/{pipeline_id}/revisions/{revision_id}/revisions": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "List catalog pipeline revisions included in the steps of a given catalog pipeline pipeline revision",
        "description": "",
        "operationId": "getCatalogPipelineRevisionPipelineRevisions",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "pipeline_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Pipeline revision ID",
            "required": true,
            "schema": {
              "type": "string",
              "oneOf": [
                {
                  "format": "resource-id"
                },
                {
                  "enum": [
                    "latest",
                    "latest_published"
                  ]
                }
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variables",
                  "outputs",
                  "steps",
                  "layout"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pipelines": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PipelineRevision"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/catalogs/{catalog_id}/pipelines/{pipeline_id}/revisions/{revision_id}/clone": {
      "post": {
        "tags": [
          "catalogs"
        ],
        "summary": "Clone catalog pipeline",
        "description": "",
        "operationId": "cloneCatalogPipeline",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "pipeline_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Pipeline revision ID",
            "required": true,
            "schema": {
              "type": "string",
              "oneOf": [
                {
                  "format": "resource-id"
                },
                {
                  "enum": [
                    "latest",
                    "latest_published"
                  ]
                }
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "recursive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "revision": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/catalogs/{catalog_id}/pipelines/{pipeline_id}/revisions/{revision_id}/run": {
      "post": {
        "tags": [
          "catalogs"
        ],
        "summary": "Run catalog pipeline",
        "description": "",
        "operationId": "runCatalogPipeline",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "pipeline_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Pipeline revision ID",
            "required": true,
            "schema": {
              "type": "string",
              "oneOf": [
                {
                  "format": "resource-id"
                },
                {
                  "enum": [
                    "latest",
                    "latest_published"
                  ]
                }
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "type": "string",
                    "format": "resource-id"
                  },
                  "variables": {
                    "type": "object"
                  },
                  "suppress_vars": {
                    "type": "boolean"
                  },
                  "suppress_events": {
                    "type": "boolean"
                  },
                  "suppress_outputs": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/pipelines/{_id}/revisions/{revision_id}/pipelines": {
      "get": {
        "tags": [
          "pipelines"
        ],
        "summary": "List pipelines included in the steps of a given pipeline revision",
        "description": "",
        "operationId": "getPipelineRevisionPipelines",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Revision revision ID",
            "required": true,
            "schema": {
              "type": "string",
              "oneOf": [
                {
                  "format": "resource-id"
                },
                {
                  "enum": [
                    "latest",
                    "latest_published"
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pipelines": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pipeline"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/pipelines/{_id}/revisions/{revision_id}/clone": {
      "post": {
        "tags": [
          "pipelines"
        ],
        "summary": "Clone pipeline",
        "description": "",
        "operationId": "clonePipeline",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Pipeline revision ID",
            "required": true,
            "schema": {
              "type": "string",
              "oneOf": [
                {
                  "format": "resource-id"
                },
                {
                  "enum": [
                    "latest",
                    "latest_published"
                  ]
                }
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "recursive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "revision": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/pipelines/{_id}/revisions/{revision_id}/run": {
      "post": {
        "tags": [
          "pipelines"
        ],
        "summary": "Run pipeline",
        "description": "",
        "operationId": "runPipeline",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "description": "Pipeline revision ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "variables": {
                    "type": "object"
                  },
                  "suppress_vars": {
                    "type": "boolean"
                  },
                  "suppress_events": {
                    "type": "boolean"
                  },
                  "suppress_outputs": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/credentials": {
      "get": {
        "tags": [
          "credentials"
        ],
        "summary": "List credentials",
        "description": "",
        "operationId": "listCredentials",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Credential types filter",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "generic",
                  "username_password",
                  "ssh_key",
                  "bearer_token",
                  "api_token",
                  "azure_service_principal",
                  "google_service_account",
                  "aws_access_key",
                  "vault_app_role",
                  "cis_license_bundle"
                ]
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_asc",
                "created_desc"
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Credential"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "credentials"
        ],
        "summary": "Create credential",
        "description": "",
        "operationId": "createCredential",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/credentials/{_id}": {
      "get": {
        "tags": [
          "credentials"
        ],
        "summary": "Get credential",
        "description": "",
        "operationId": "getCredential",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Credential ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "credentials"
        ],
        "summary": "Update credential",
        "description": "",
        "operationId": "updateCredential",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Credential ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "_id": {
                    "type": "string",
                    "readOnly": true
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "credentials"
        ],
        "summary": "Delete credential",
        "description": "",
        "operationId": "deleteCredential",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Credential ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "List projects",
        "description": "",
        "operationId": "listProjects",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "modified_asc",
                "modified_desc",
                "name_asc",
                "name_desc"
              ]
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "organization"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projects": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/catalogs/organizations": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "List organizations with publicly available catalogs.",
        "description": "",
        "operationId": "listSharingCatalogsOrganizations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "image_id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/catalogs/{catalog_id}/pipelines": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "List catalog pipelines",
        "description": "",
        "operationId": "listCatalogPipelines",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "modified_asc",
                "modified_desc",
                "name_asc",
                "name_desc"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pinned",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pipelines": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pipeline"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/catalogs/{catalog_id}/pipelines/{pipeline_id}": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "Get catalog pipeline",
        "description": "",
        "operationId": "getCatalogPipeline",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "pipeline_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pipeline"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/catalogs/{catalog_id}/pipelines/{pipeline_id}/revisions": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "Get catalog pipeline versions",
        "description": "",
        "operationId": "getCatalogPipelineRevisions",
        "parameters": [
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "pipeline_id",
            "in": "path",
            "description": "Pipeline ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "variables",
                  "outputs"
                ]
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pipeline_revisions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PipelineRevision"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/jobs": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "List jobs",
        "description": "",
        "operationId": "listJobs",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created_asc",
                "created_desc",
                "last_run_asc",
                "last_run_desc"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pipeline",
                  "pipeline_revision"
                ]
              }
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pinned",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Job"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Create job",
        "description": "",
        "operationId": "createJob",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Job"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/jobs/{_id}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get job",
        "description": "",
        "operationId": "getJob",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Job ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pipeline",
                  "pipeline_revision",
                  "webhook_token"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Update job",
        "description": "",
        "operationId": "updateJob",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Job ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Job"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "jobs"
        ],
        "summary": "Delete job",
        "description": "",
        "operationId": "deleteJob",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Job ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/jobs/{_id}/webhook/token": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Regenerate job webhook token.",
        "description": "",
        "operationId": "regenerateJobToken",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Job ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/jobs/{_id}/run": {
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Run job",
        "description": "",
        "operationId": "runJob",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Job ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "variables": {
                    "type": "object"
                  },
                  "suppress_outputs": {
                    "description": "Whether to suppress run output",
                    "type": "boolean"
                  },
                  "suppress_events": {
                    "description": "Whether to suppress run events",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/agents": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "List agents associated with a project",
        "description": "",
        "operationId": "listProjectRunnerAgents",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "runner_agents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RunnerAgent"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/runs": {
      "get": {
        "tags": [
          "runs"
        ],
        "summary": "List runs for a project",
        "description": "",
        "operationId": "listProjectRuns",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "pipeline_id",
            "in": "query",
            "description": "Pipeline ID",
            "required": false,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "job_id",
            "in": "query",
            "description": "Job ID",
            "required": false,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created_desc",
                "created_asc"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "job",
                  "pipeline",
                  "runner_agent"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "runs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Run"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/runs/{_id}": {
      "get": {
        "tags": [
          "runs"
        ],
        "summary": "Get run",
        "description": "",
        "operationId": "getRun",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Run ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "events",
                  "operations",
                  "variables",
                  "outputs",
                  "job",
                  "pipeline",
                  "runner_agent",
                  "pipeline_revision"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Run"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "runs"
        ],
        "summary": "Update a run",
        "description": "",
        "operationId": "updateRun",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Run ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "retained": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "runs"
        ],
        "summary": "Delete run",
        "description": "",
        "operationId": "deleteRun",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Run ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/runs/{_id}/run": {
      "post": {
        "tags": [
          "runs"
        ],
        "summary": "Rerun a run",
        "description": "",
        "operationId": "rerunRun",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Run ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/publish": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Publish project catalog",
        "description": "",
        "operationId": "publishProjectCatalog",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "catalog": {
                    "type": "boolean"
                  },
                  "catalog_scope": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "List organizations",
        "description": "",
        "operationId": "listOrganizations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organizations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get organization",
        "description": "",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "notification_channels"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Update organization",
        "description": "",
        "operationId": "updateOrganization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organization"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/projects": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "List organization projects",
        "description": "",
        "operationId": "listOrganizationProjects",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "modified_asc",
                "modified_desc",
                "name_asc",
                "name_desc"
              ]
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projects": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create organization project",
        "description": "",
        "operationId": "createOrganizationProject",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/catalogs/shared": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "List shared catalogs available to organization",
        "description": "",
        "operationId": "listOrganizationSharedCatalogs",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Owner Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "name_asc",
                "name_desc"
              ]
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "owner_organization_id",
            "in": "query",
            "description": "Owner Organization ID",
            "required": false,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Catalog tags filter",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CatalogTags"
              },
              "minItems": 1,
              "uniqueItems": true
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "organization",
                  "pending_access_request"
                ]
              }
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Access scope of catalogs to return",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "accessible"
              ]
            }
          },
          {
            "name": "draft",
            "in": "query",
            "description": "Include draft catalogs",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "projects": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/catalogs/shared/access_requests": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "List pending outgoing access requests for an organization",
        "description": "",
        "operationId": "listOrganizationSharedCatalogAccessRequests",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogAccessRequest"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/catalogs/{catalog_id}/access": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "List organizations with access to the given catalog.",
        "description": "",
        "operationId": "listCatalogOrganizationAccess",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "shared_organization"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "catalog_access": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogAccess"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/catalogs/{catalog_id}/access/{shared_organization_id}": {
      "delete": {
        "tags": [
          "catalogs"
        ],
        "summary": "Revoke an organization's access to a catalog.",
        "description": "",
        "operationId": "removeCatalogAccess",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "shared_organization_id",
            "in": "path",
            "description": "Shared Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/catalogs/{catalog_id}/access_requests": {
      "get": {
        "tags": [
          "catalogs"
        ],
        "summary": "List catalog access requests",
        "description": "",
        "operationId": "listCatalogAccessRequests",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CatalogAccessRequest"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "catalogs"
        ],
        "summary": "Create a catalog access request",
        "description": "",
        "operationId": "createCatalogAccessRequest",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shared_organization_id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/catalogs/{catalog_id}/access_requests/{access_request_id}": {
      "post": {
        "tags": [
          "catalogs"
        ],
        "summary": "Update catalog access request (approve or deny).",
        "description": "",
        "operationId": "updateCatalogAccessRequest",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "catalog_id",
            "in": "path",
            "description": "Catalog ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "access_request_id",
            "in": "path",
            "description": "Access Request ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List organization users",
        "description": "",
        "operationId": "listOrganizationUsers",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add organization user",
        "description": "",
        "operationId": "addOrganizationUser",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "group_ids": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/users/{_id}": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Update organization user",
        "description": "",
        "operationId": "updateOrganizationUser",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group_ids": {
                    "type": "array",
                    "minItems": 1,
                    "uniqueItems": true,
                    "items": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Remove organization user",
        "description": "",
        "operationId": "removeOrganizationUser",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/invites": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List organization invites",
        "description": "",
        "operationId": "listOrganizationInvites",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrganizationInvite"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/invites/{_id}": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Revoke organization invite",
        "description": "",
        "operationId": "revokeOrganizationInvite",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Invite ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/invites/{_id}/resend": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Resend organization invite",
        "description": "",
        "operationId": "resendOrganizationInvite",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Invite ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/groups": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List organization groups",
        "description": "",
        "operationId": "listOrganizationGroups",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserGroup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create organization group",
        "description": "",
        "operationId": "createOrganizationGroup",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/groups/{group_id}": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete organization group",
        "description": "",
        "operationId": "deleteOrganizationGroup",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Update organization group",
        "description": "",
        "operationId": "updateOrganizationGroup",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "group_id",
            "in": "path",
            "description": "Group ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/notification_channels": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Add organization notification channel",
        "description": "",
        "operationId": "addOrganizationNotificationChannel",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationChannel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/notification_channels/{notification_channel_id}": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Update organization notification channel",
        "description": "",
        "operationId": "updateOrganizationNotificationChannel",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "notification_channel_id",
            "in": "path",
            "description": "Notification Channel ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationChannel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "summary": "Remove organization notification channel",
        "description": "",
        "operationId": "removeOrganizationNotificationChannel",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "notification_channel_id",
            "in": "path",
            "description": "Notification Channel ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/agents": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "List all agents for an organization",
        "description": "",
        "operationId": "listOrganizationRunnerAgents",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "runner_agents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RunnerAgent"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Create runner agent",
        "description": "",
        "operationId": "createRunnerAgent",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "project_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/agents/{_id}": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Get agent",
        "description": "",
        "operationId": "getRunnerAgent",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Agent ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Additional fields to return",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "events",
                  "options",
                  "agent_key"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunnerAgent"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Update runner agent",
        "description": "",
        "operationId": "updateRunnerAgent",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Agent ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "options": {
                    "type": "object",
                    "properties": {
                      "idle_ttl": {
                        "type": "integer"
                      },
                      "startup_script": {
                        "type": "string",
                        "nullable": true
                      },
                      "env": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "delete": {
        "tags": [
          "agents"
        ],
        "summary": "Delete runner agent",
        "description": "",
        "operationId": "deleteRunnerAgent",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Agent ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/agents/{_id}/key": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Regenerate runner agent key",
        "description": "",
        "operationId": "regenerateRunnerAgentKey",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Agent ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent_key": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/agents/{_id}/start": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Start runner agent",
        "description": "",
        "operationId": "startRunnerAgent",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Agent ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/organizations/{organization_id}/agents/{_id}/stop": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Stop runner agent",
        "description": "",
        "operationId": "stopRunnerAgent",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "description": "Organization ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          },
          {
            "name": "_id",
            "in": "path",
            "description": "Agent ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "resource-id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/projects/{project_id}/jobs/{_id}/webhook/events": {
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Token": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "expire": {
            "type": "integer",
            "minimum": 1,
            "maximum": 999
          },
          "expire_unit": {
            "type": "string",
            "enum": [
              "hours",
              "days",
              "weeks",
              "years"
            ]
          },
          "token": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "maxLength": 256,
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "UserActivity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "operation_id": {
            "type": "string",
            "readOnly": true
          },
          "occurred": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "UserGroup": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "default_project_run",
          "create_projects",
          "organization_admin"
        ],
        "properties": {
          "group_id": {
            "type": "string"
          },
          "default_project_role": {
            "type": "string",
            "nullable": true
          },
          "default_project_run": {
            "type": "boolean"
          },
          "create_projects": {
            "type": "boolean"
          },
          "organization_admin": {
            "type": "boolean"
          },
          "user_count": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "Organization": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "contact_name": {
            "type": "string"
          },
          "contact_email": {
            "type": "string"
          },
          "image_id": {
            "type": "string"
          },
          "plan_quotas": {
            "type": "object",
            "properties": {
              "project_count": {
                "type": "integer"
              },
              "user_count": {
                "type": "integer"
              },
              "agent_count": {
                "type": "integer"
              }
            }
          },
          "notification_channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationChannel"
            }
          }
        }
      },
      "OrganizationInvite": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "organization_id": {
            "type": "string",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "email": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Project": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "organization_id": {
            "type": "string",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image_id": {
            "type": "string"
          },
          "icon_name": {
            "type": "string"
          },
          "pipeline_count": {
            "type": "integer",
            "readOnly": true
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatalogTags"
            }
          },
          "published_pipeline_count": {
            "type": "integer",
            "readOnly": true
          },
          "product_link": {
            "type": "string"
          },
          "support_link": {
            "type": "string"
          },
          "license_link": {
            "type": "string"
          },
          "policy_link": {
            "type": "string"
          },
          "catalog": {
            "type": "boolean"
          },
          "catalog_scope": {
            "type": "string"
          },
          "shared": {
            "type": "boolean"
          },
          "pending_access_request": {
            "type": "boolean",
            "readOnly": true
          },
          "notification_channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationChannel"
            }
          }
        }
      },
      "CatalogAccessRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "catalog_id": {
            "type": "string"
          },
          "shared_organization_id": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string"
          }
        }
      },
      "CatalogAccess": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string"
          },
          "organization_id": {
            "type": "string"
          },
          "shared_organization_id": {
            "type": "string"
          },
          "catalog_id": {
            "type": "string"
          },
          "organization": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "image_id": {
                "type": "string"
              }
            }
          }
        }
      },
      "ProjectInvite": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "project_id": {
            "type": "string",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "email": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Pipeline": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "public": {
            "type": "boolean",
            "readOnly": true
          },
          "pinned": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "image_id": {
            "type": "string"
          },
          "icon_name": {
            "type": "string"
          },
          "revision_count": {
            "type": "integer",
            "readOnly": true
          },
          "step_count": {
            "type": "integer",
            "readOnly": true
          }
        }
      },
      "PipelineRevision": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "pipeline_id": {
            "type": "string",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "revision": {
            "type": "integer",
            "readOnly": true
          },
          "published": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "readOnly": true
          },
          "comment": {
            "type": "string"
          },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "properties": {
                  "type": "object"
                }
              }
            }
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "outputs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "layout": {
            "type": "object"
          }
        }
      },
      "Credential": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "generic",
              "username_password",
              "ssh_key",
              "bearer_token",
              "api_token",
              "azure_service_principal",
              "google_service_account",
              "aws_access_key",
              "vault_app_role",
              "cis_license_bundle"
            ]
          },
          "data": {
            "type": "object"
          }
        }
      },
      "Job": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "pipeline_id",
          "name",
          "trigger_type"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "project_id": {
            "type": "string"
          },
          "pipeline_id": {
            "type": "string"
          },
          "pipeline_revision_id": {
            "type": "string",
            "oneOf": [
              {
                "format": "resource-id"
              },
              {
                "enum": [
                  "latest",
                  "latest_published"
                ]
              }
            ]
          },
          "pipeline_version_id": {
            "type": "integer"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean"
          },
          "pinned": {
            "type": "boolean"
          },
          "trigger_type": {
            "type": "string",
            "enum": [
              "manual",
              "scheduled",
              "webhook"
            ]
          },
          "schedule": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "start_day": {
                "type": "string"
              },
              "start_time": {
                "type": "string"
              },
              "offset": {
                "type": "string"
              },
              "interval": {
                "type": "integer",
                "minimum": 1
              },
              "interval_type": {
                "type": "string",
                "enum": [
                  "minute",
                  "hour",
                  "day",
                  "week",
                  "month"
                ]
              }
            }
          },
          "webhook_type": {
            "type": "string",
            "enum": [
              "custom",
              "github",
              "gitlab",
              "bitbucket",
              "terraform_run_task"
            ]
          },
          "webhook_token": {
            "type": "string",
            "readOnly": true
          },
          "webhook": {
            "type": "object"
          },
          "pipeline_catalog_id": {
            "type": "string"
          },
          "suppress_outputs": {
            "type": "boolean"
          },
          "suppress_vars": {
            "type": "boolean"
          },
          "suppress_events": {
            "type": "boolean"
          },
          "disable_on_failure": {
            "type": "boolean"
          },
          "variables": {
            "type": "object"
          }
        }
      },
      "RunnerAgent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "organization_id": {
            "type": "string",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "host_name": {
            "type": "string",
            "readOnly": true
          },
          "host_type": {
            "type": "string",
            "readOnly": true
          },
          "machine_type": {
            "type": "string",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "readOnly": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "heartbeat": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          },
          "idle_since": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "stop_pending": {
            "type": "boolean",
            "readOnly": true
          },
          "events": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "occurred": {
                  "type": "string",
                  "format": "date-time"
                },
                "level": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                }
              }
            }
          },
          "options": {
            "type": "object",
            "properties": {
              "options": {
                "type": "object",
                "properties": {
                  "idle_ttl": {
                    "type": "integer"
                  },
                  "startup_script": {
                    "type": "string",
                    "nullable": true
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Run": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string",
            "readOnly": true
          },
          "organization_id": {
            "type": "string",
            "readOnly": true
          },
          "job_id": {
            "type": "string",
            "readOnly": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "started": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "finished": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "Queued",
              "Pending",
              "Running",
              "Succeeded",
              "Failed"
            ]
          },
          "retained": {
            "type": "boolean"
          },
          "operations": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "readOnly": true
                },
                "pipeline_id": {
                  "type": "string",
                  "readOnly": true
                },
                "pipeline_revision_id": {
                  "type": "string",
                  "readOnly": true
                },
                "module_id": {
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "readOnly": true
                },
                "started": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "finished": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "status": {
                  "type": "string",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          },
          "outputs": {
            "type": "object",
            "readOnly": true
          },
          "suppress_events": {
            "type": "boolean",
            "readOnly": true
          },
          "suppress_outputs": {
            "type": "boolean",
            "readOnly": true
          },
          "suppress_vars": {
            "type": "boolean",
            "readOnly": true
          },
          "events": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "readOnly": true
                },
                "operation_id": {
                  "type": "string",
                  "readOnly": true
                },
                "occurred": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "code": {
                  "type": "string",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "readOnly": true
                },
                "details": {
                  "type": "string",
                  "readOnly": true
                },
                "level": {
                  "type": "string",
                  "readOnly": true
                },
                "output": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "CatalogTags": {
        "type": "string",
        "enum": [
          "ChatOps",
          "Cloud Infrastructure",
          "DevOps",
          "ITOps",
          "Network Automation",
          "Security Automation",
          "MLOps"
        ]
      },
      "NotificationChannel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "email"
            ]
          },
          "settings": {
            "type": "object",
            "properties": {
              "recipients": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "auth": {
            "type": "object"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "readOnly": true
          },
          "details": {
            "type": "string",
            "readOnly": true
          }
        }
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized"
      },
      "Forbidden": {
        "description": "Forbidden"
      },
      "NotFound": {
        "description": "Not Found"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "apikey"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
